{"mappings":"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","sources":["src/socket-script.js","src/main.js"],"sourcesContent":["export default function () {\n  const messagecontainer = document.getElementById('message-container');\n  const messageForm = document.getElementById('send-container');\n  const messgaeInput = document.getElementById('message-input');\n\n  let user_name;\n  let last_other_color;\n  let last_message;\n\n  let isReading = false;\n\n  while (true) {\n    try {\n      user_name = prompt('What is your name?').trim();\n\n      if (user_name.length != 0) {\n        user_name = user_name.substring(0, 10);\n        break;\n      }\n    } catch (error) {\n      console.log(`이름을 작성해주세요`);\n    }\n  }\n\n  var socket = io({\n    reconnection: false,\n  });\n  socket.emit('new-user', user_name);\n  appendMessage({ message: `${user_name} joined` }, 'info');\n\n  socket.on('chat-message', (data) => {\n    appendMessage(data, 'other');\n  });\n\n  socket.on('user-connected', (uname) => {\n    appendMessage({ message: `${uname} connected` }, 'info');\n  });\n\n  socket.on('user-disconnected', (uname) => {\n    appendMessage({ message: `${uname} disconnected` }, 'info');\n  });\n\n  socket.on('disconnect', () => {\n    disconnecting();\n  });\n\n  socket.on('bye', () => {\n    disconnecting();\n  });\n\n  function disconnecting() {\n    appendMessage({ message: `disconnected` }, 'info');\n\n    // message_form disabled\n    messgaeInput.value = '';\n    messgaeInput.disabled = true;\n    document.querySelector('#send-button').disabled = true;\n  }\n\n  messageForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const message = messgaeInput.value.trim();\n\n    if (message.length == 0) {\n      return;\n    }\n\n    appendMessage({ message: message });\n\n    socket.emit('send-chat-message', message);\n    messgaeInput.value = '';\n\n    init();\n    document.querySelector('#message-input').focus();\n  });\n\n  function appendMessage(data, type = 'me') {\n    let { message, name, color } = data;\n    if (!name) {\n      name = 'unknown';\n    }\n    const messageElement = document.createElement('div');\n    let msg, time;\n    let textNode = document.createTextNode(message);\n\n    switch (type) {\n      case 'me':\n        messageElement.className = type;\n\n        msg = document.createElement('div');\n        msg.className = 'msg';\n        msg.appendChild(textNode);\n\n        time = document.createElement('div');\n        time.className = 'time';\n        time.innerHTML = getChatTime();\n\n        messageElement.appendChild(msg);\n        messageElement.appendChild(time);\n\n        if (last_message?.className == 'me') {\n          setVisibilityTime(last_message, time);\n        }\n\n        last_other_color = '';\n        last_message = messageElement;\n        break;\n      case 'other':\n        messageElement.className = type;\n        const profileimg = document.createElement('div');\n        profileimg.className = 'profileimg';\n        profileimg.innerHTML = name[0].toUpperCase();\n        profileimg.style.backgroundColor = color;\n        profileimg.style.color = getColorByBgColor(color);\n\n        const namentime = document.createElement('div');\n        namentime.className = 'namentime';\n\n        const uname = document.createElement('div');\n        uname.className = 'uname';\n\n        uname.appendChild(document.createTextNode(name));\n\n        msg = document.createElement('div');\n        msg.className = 'msg';\n        msg.appendChild(textNode);\n\n        time = document.createElement('div');\n        time.className = 'time';\n        time.innerHTML = getChatTime();\n\n        if (last_other_color != color) {\n          messageElement.appendChild(profileimg);\n          namentime.appendChild(uname);\n        } else {\n          setVisibilityTime(last_message, time);\n        }\n\n        namentime.appendChild(msg);\n        namentime.appendChild(time);\n\n        messageElement.appendChild(namentime);\n        last_other_color = color;\n\n        last_message = namentime;\n        break;\n\n      default:\n        messageElement.className = type;\n        messageElement.appendChild(textNode);\n        last_other_color = '';\n\n        setTimeout(() => {\n          getUserList();\n        }, 300);\n\n        break;\n    }\n\n    messagecontainer.append(messageElement);\n\n    if (!isReading) {\n      messagecontainer.scrollBy({\n        top: messagecontainer.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  messgaeInput.addEventListener(\n    'input',\n    function () {\n      chkvalue(messgaeInput.value.trim());\n    },\n    false\n  );\n\n  Object.defineProperty(String.prototype, 'hashCode', {\n    value: function () {\n      var hash = 0,\n        i,\n        chr;\n      for (i = 0; i < this.length; i++) {\n        chr = this.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0;\n      }\n      return hash;\n    },\n  });\n\n  const listbox = document.querySelector('#user-list > ul');\n\n  function getChatTime() {\n    var today = new Date();\n    var h = today.getHours();\n    var m = today.getMinutes();\n    m = checkTime(m);\n\n    return `${h}:${m}`;\n  }\n\n  function checkTime(i) {\n    if (i < 10) {\n      i = '0' + i;\n    }\n    return i;\n  }\n\n  function getColorByName(name) {\n    const stringhash = `0.` + Math.abs(String(name).hashCode());\n\n    var bg_colour = Math.floor(Number(stringhash) * 16777215).toString(16);\n    bg_colour = '#' + ('000000' + bg_colour).slice(-6);\n\n    return bg_colour;\n  }\n\n  function getColorByBgColor(bgColor) {\n    if (!bgColor) {\n      return '';\n    }\n    return parseInt(bgColor.replace('#', ''), 16) > 0xffffff / 2\n      ? '#000000'\n      : '#ffffff';\n  }\n\n  function chkvalue(text) {\n    if (text.length == 0) {\n      document.querySelector('#send-button').style.color = '#9e9e9e';\n    } else {\n      document.querySelector('#send-button').style.color = '';\n    }\n  }\n\n  function setVisibilityTime(parentElement, time) {\n    let time_element;\n\n    for (var i = 0; i < parentElement.childNodes.length; i++) {\n      if (parentElement.childNodes[i].className == 'time') {\n        time_element = parentElement.childNodes[i];\n        break;\n      }\n    }\n\n    if (time_element?.innerHTML == time.innerHTML) {\n      time_element.style.display = 'none';\n    }\n  }\n\n  function getUserList() {\n    //   listbox 초기화\n    let newListbox = document.createElement('li');\n    newListbox.innerHTML = `<li class=\"list-group-item head\">User List</li>`;\n\n    const url = '/users';\n    const fetchResponsePromise = fetch(url);\n    fetchResponsePromise\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong on api server!');\n        }\n      })\n      .then((response) => {\n        console.log(`fetch`, response);\n        let i = 0;\n        for (const key in response) {\n          i++;\n          if (response.hasOwnProperty(key)) {\n            const element = response[key];\n\n            const new_li_element = document.createElement('li');\n            new_li_element.className = 'list-group-item';\n            new_li_element.appendChild(document.createTextNode(element));\n            newListbox.appendChild(new_li_element);\n          }\n        }\n        listbox.innerHTML = newListbox.innerHTML;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  function init() {\n    document.querySelector('#send-button').style.color = '#9e9e9e';\n  }\n\n  init();\n\n  // 스크롤 위치에 따라 isReading 값 토글\n  messagecontainer.addEventListener('scroll', function (e) {\n    const { offsetHeight, scrollTop, scrollHeight } = e.target;\n    // console.info(offsetHeight + scrollTop, scrollHeight);\n    if (!isReading && scrollHeight - (offsetHeight + scrollTop) >= 60) {\n      isReading = true;\n      // console.info(isReading);\n    } else if (isReading && scrollHeight - (offsetHeight + scrollTop) < 60) {\n      isReading = false;\n      // console.info(isReading);\n    }\n  });\n}\n","import socket_script from './socket-script';\n\nsocket_script();\n"],"names":["messagecontainer","document","getElementById","messageForm","messgaeInput","user_name","last_other_color","last_message","isReading","prompt","trim","length","substring","error","console","log","socket","io","reconnection","disconnecting","appendMessage","message","value","disabled","querySelector","data","type","name","color","messageElement","createElement","msg","time","textNode","createTextNode","className","appendChild","innerHTML","getChatTime","setVisibilityTime","profileimg","toUpperCase","style","backgroundColor","bgColor","parseInt","replace","namentime","uname","setTimeout","newListbox","fetch","then","response","status","json","Error","key","hasOwnProperty","element","new_li_element","listbox","catch","getUserList","append","scrollBy","top","scrollHeight","behavior","emit","on","addEventListener","e","preventDefault","init","focus","Object","defineProperty","String","prototype","i","hash","this","charCodeAt","today","Date","h","getHours","m","getMinutes","checkTime","parentElement","time_element","childNodes","display","offsetHeight","scrollTop","target","$91f7bdef4205e60b$export$9099ad97b570f7c"],"version":3,"file":"index.06c81f88.js.map"}